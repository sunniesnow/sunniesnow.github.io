{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "https://sunniesnow.github.io/schema/chart-1.0.json",
	"title": "Sunniesnow Chart",
	"type": "object",
	"required": [
		"title",
		"artist",
		"charter",
		"difficultyName",
		"difficultyColor",
		"difficulty",
		"events"
	],
	"additionalProperties": false,
	"properties": {
		"$schema": { "type": "string" },
		"title": { "type": "string", "minLength": 1, "description": "The title of the music." },
		"artist": { "type": "string", "minLength": 1, "description": "The artist of the music." },
		"charter": { "type": "string", "minLength": 1, "description": "The charter of the chart." },
		"difficultyName": {
			"type": "string",
			"minLength": 1,
			"description": "The name of the difficulty. In Lyrica equivalents, possible values are \"Easy\", \"Normal\", \"Hard\", \"Master\", and \"Special\". However, you are free to use other names."
		},
		"difficultyColor": { "oneOf": [
			{ "type": "string" },
			{ "type": "integer", "minimum": 0, "maximum": 16777215 }
		], "description": "The color of the difficulty." },
		"difficulty": { "type": "string", "minLength": 1 },
		"difficultySup": {
			"type": "string",
			"default": "",
			"description": "The difficulty of the chart. In Lyrica equivalents, possible values are decimal representations of any integers from 1 to 13. However, you are free to use other values."
		},
		"offset": {
			"type": "number",
			"default": 0.0,
			"description": "The offset of the chart, in seconds. Usually, this should be zero. This is only used by chart reviewers to adjust the offset after the chart is already made. Chart makers should generally avoid using this and leave it as zero."
		},
		"sscharter": { "default": null, "oneOf": [
			{ "type": "null" },
			{
				"type": "object",
				"required": ["version", "port"],
				"properties": {
					"version": { "type": "string" },
					"port": { "type": "integer" }
				},
				"additionalProperties": false
			}
		], "description": "Used for sscharter integration." },
		"events": {
			"description": "The events of the chart.",
			"type": "array",
			"minItems": 1,
			"items": {
				"type": "object",
				"required": ["type", "time", "properties"],
				"additionalProperties": false,
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"tap",
							"hold",
							"drag",
							"flick",
							"placeholder",
							"bgNote",
							"bigText",
							"grid",
							"hexagon",
							"checkerboard",
							"diamondGrid",
							"pentagon",
							"turntable",
							"hexagram"
						]
					},
					"time": { "type": "number", "description": "This specifies the time of the event, in seconds, measured from the start of the music." },
					"properties": { "type": "object" },
					"allOf": [ {
						"if": { "properties": { "type": { "const": "tap" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"tipPoint": { "type": ["string", "null"], "default": null },
								"text": { "type": "string", "default": "" }
							},
							"required": ["x", "y"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "const": "hold" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"duration": { "type": "number", "exclusiveMinimum": 0 },
								"tipPoint": { "type": ["string", "null"], "default": null },
								"text": { "type": "string", "default": "" }
							},
							"required": ["x", "y", "duration"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "const": "drag" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"tipPoint": { "type": ["string", "null"], "default": null }
							},
							"required": ["x", "y"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "const": "flick" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"angle": { "type": "number" },
								"tipPoint": { "type": ["string", "null"], "default": null },
								"text": { "type": "string", "default": "" }
							},
							"required": ["x", "y", "angle"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "const": "placeholder" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"tipPoint": { "type": ["string", "null"], "default": null }
							},
							"required": ["x", "y"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "const": "bgNote" } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"x": { "type": "number" },
								"y": { "type": "number" },
								"duration": { "type": "number", "minimum": 0.0, "default": 0.0 },
								"tipPoint": { "type": ["string", "null"], "default": null },
								"text": { "type": "string", "default": "" }
							},
							"required": ["x", "y"],
							"additionalProperties": false
						} } } }
					}, {
						"if": { "properties": { "type": { "enum": [
							"grid",
							"hexagon",
							"checkerboard",
							"diamondGrid",
							"pentagon",
							"turntable",
							"hexagram"
						] } } },
						"then": { "properties": { "properties": { "properties": {
							"properties": {
								"duration": { "type": "number", "minimum": 0.0, "default": 0.0 }
							},
							"additionalProperties": false
						} } } }
					} ]
				}
			}
		}
	}
}
